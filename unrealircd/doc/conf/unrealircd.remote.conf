@define $VOID "8,4   E N T E R   T H E   V O I D   ";

admin {
	"         4Administrator: Wyatt Deere        14(aka chrono)        6chrono@digitalgangsta.com";
	"           4Retaliation: Brandon McDubai    14(aka MRCHATS)       6branbran89@supernets.org";
	"             4Moderator: Bristopher Manning 14(aka delorean)      6simpsonsfan420@supernets.org";
	"                 4Sales: Branthony Bronson  14(aka pyrex)         6showercaphandgun@supernets.org";
	"      4Public Relations: Bradshaw Wiggins   14(aka Baron Fortuna) 6lovemyrace@dailystormer.in";
	"4Research & Development: Tim Allen-key      14(aka e)             6highschoolmusical@carltonbanksclub.edu";
	"";
	"Feel free to chat with us in #5000 for network help & support!";
}

alias botserv { type services; }
alias bs { target botserv; type services; }
alias chanserv { type services; }
alias cs { target chanserv; type services; }
alias hostserv { type services; }
alias hs { target hostserv; type services; }
alias nickserv { type services; }
alias ns { target nickserv; type services; }
alias operserv { type services; }
alias os { target operserv; type services; }

class clients { pingfreq 120; maxclients  100; sendq  25M; recvq 32k; }
class known   { pingfreq 120; maxclients  250; sendq  50M; recvq 32k; }
class local   { pingfreq 300; maxclients 1000; sendq  50M; options { nofakelag; } }
#class tor     { pingfreq 300; maxclients  50;  sendq   1M; }
class servers { pingfreq 300; maxclients   20; sendq 100M; connfreq 15; }

allow { mask *;                              class clients; maxperip 2;    global-maxperip 2; }
allow { mask { security-group known-users; } class known;   maxperip 3;    global-maxperip 3; }
allow { mask { 127.0.0.1;                  } class local;   maxperip 1000; global-maxperip 1000; password "simpsonsfan"; }
#allow { mask { 127.0.0.2;                 }  class tor;     maxperip 100;  global-maxperip 100; }

listen { ip *; port 6667;      options { clientsonly;      } }
listen { ip *; port 6697;      options { clientsonly; tls; } tls-options { certificate "tls/irc.crt"; key "tls/irc.key"; } }
listen { ip *; port REDACTED;  options { serversonly; tls; } }

#listen { file "/etc/tor/unrealircd/tor_ircd.socket";     mode 0777; spoof-ip 127.0.0.2; }
#listen { file "/etc/tor/unrealircd/tor_tls_ircd.socket"; mode 0777; spoof-ip 127.0.0.2; options { tls; } }

#require authentication { mask { *@127.0.0.2; } reason "$VOID"; }

deny channel { channel "#help";     reason "This channel has moved to #superbowl"; redirect "#superbowl"; }
deny channel { channel "#pumpcoin"; reason "This channel has moved to #exchange";  redirect "#exchange";  }

link irc.supernets.org {
	incoming { mask REDACTED; }
	outgoing {
		bind-ip *;
		hostname REDACTED;
		port REDACTED;
		options { tls; autoconnect; }
	}
	password "REDACTED" { spkifp; }
	class servers;
}

log {
	source { error; fatal; warn; }
	destination { file "ircd.log" { maxsize 5M; } }
}

log {
	source { !debug; all; }
	destination { channel "#syslog"; }
}

tld { mask *@*; motd remote.motd; rules remote.motd; options { remote; } }

ulines { services.supernets.org; }

blacklist dronebl {
	dns {
		name dnsbl.dronebl.org;
		type record;
		reply { 3; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; }
	}
	action gzline;
	ban-time 30d;
	reason "$VOID";
}

blacklist efnetrbl {
	dns {
		name rbl.efnetrbl.org;
		type record;
		reply { 1; 4; 5; }
	}
	action gzline;
	ban-time 30d;
	reason "$VOID";
}

blacklist torbl {
	dns {
		name torexit.dan.me.uk;
		type record;
		reply { 100; }
	}
	action gzline;
	ban-time 30d;
	reason "$VOID";
}

set {
	kline-address "enterthevoid@supernets.org";
	gline-address "enterthevoid@supernets.org";
	modes-on-connect "+iIpTx";
	modes-on-oper "+Hq";
	snomask-on-oper "+o";
	modes-on-join "+ns";
	level-on-join "op";
	restrict-usermodes "ips";
	restrict-channelmodes "nLpPs";
	restrict-commands {
		channel-create  { except { connect-time 60;  identified yes; reputation-score 100; } }
		channel-message { except { connect-time 5;   identified yes; reputation-score 100; } }
		channel-notice  { except { connect-time 15;  identified yes; reputation-score 100; } }
		invite          { except { connect-time 300; identified yes; reputation-score 100; } }
		join            { except { connect-time 5;   identified yes; reputation-score 100; } }
		list            { except { connect-time 5;   identified yes; reputation-score 100; } }
		private-message { except { connect-time 300; identified yes; reputation-score 100; } }
		private-notice  { except { connect-time 300; identified yes; reputation-score 100; } }
	}
	oper-auto-join "#syslog";
	who-limit 1;
	nick-length 20;
	maxchannelsperuser 10;
	channel-command-prefix "`!@$.";
	topic-setter nick;
	ban-setter nick;
	options { hide-ulines; flat-map; identd-check; }
	network-name "SuperNETs";
	default-server "irc.supernets.org";
	services-server "services.supernets.org";
	sasl-server "services.supernets.org";
	help-channel "#superbowl";
	cloak-method ip;
	cloak-keys {
		"REDACTED";
		"REDACTED";
		"REDACTED";
	}
	cloak-prefix "SUPER";
	plaintext-policy {
		user warn;
		oper deny;
		server deny;
		user-message "4WARNING: You are not on a secure TLS connection";
		oper-message "Network operators must be on a secure TLS connection";
	}
	outdated-tls-policy {
		user warn;
		oper deny;
		server deny;
		user-message "4WARNING: You are using an outdated TLS protocol or cipher";
		oper-message "Network operators must be using an up-to-date TLS protocol & cipher";
	}
	anti-flood {
		channel {
			profile defcon { flood-mode "[10j#R5,500m#M5,10n#N5,10k#K5]:15"; }
			boot-delay 75;
			split-delay 75;
		}
		everyone {
			connect-flood 3:60;
			handshake-data-flood {
				amount 4k;
				ban-action kill;
			}
		}
		known-users {
			away-flood    10:300;
			invite-flood  10:300;
			knock-flood   10:300;
			join-flood	  10:300;
			nick-flood    10:300;
			max-concurrent-conversations { users 5; new-user-every 60s; }
			lag-penalty 10; # update?
			lag-penalty-bytes 0;
		}
		unknown-users {
			away-flood    3:300;
			invite-flood  3:300;
			knock-flood   3:300;
			join-flood    3:300;
			nick-flood    3:300;
			max-concurrent-conversations { users 2; new-user-every 120s; }
			lag-penalty 25;
			lag-penalty-bytes 90;
		}
	}
	default-bantime 30d;
	modef-default-unsettime 5;
	spamfilter {
		ban-time 30d;
		ban-reason "$VOID";
		utf8 yes;
		except { destination { "#anythinggoes"; } }
	}
	max-targets-per-command { kick 1; part 1; privmsg 1; }
	hide-ban-reason yes;
	reject-message {
		gline                "$VOID";
		kline                "$VOID";
		password-mismatch    "$VOID";
		server-full          "$VOID";
		too-many-connections "$VOID";
		unauthorized         "$VOID";
	}
	hide-killed-by yes;
	antimixedutf8 {
		score 8;
		ban-action block;
		ban-reason "$VOID";
	}
	connthrottle {
		except        { reputation-score 100; identified yes; webirc yes; }
		new-users     { local-throttle 20:60; global-throttle 30:60;      }
		disabled-when { reputation-gathering 1w; start-delay 3m;          }
		reason "$VOID";
	}
	history {
		channel {
			playback-on-join { lines 1000; time 1d; }
			max-storage-per-channel {
				registered   { lines 1000; time 1d; } 
				unregistered { lines 100;  time 1h; } 
			}
		}
	}
	manual-ban-target ip;
	hide-idle-time { policy always; }
	whois-details {
		bot         { everyone none; self full; oper full; } 
		channels    { everyone none; self full; oper full; }
		oper        { everyone none; self full; oper full; } 
		reputation  { everyone full; self full; oper full; }
		server      { everyone none; self full; oper full; }
		swhois      { everyone full; self full; oper full; }
	}
	blacklist {
        recheck-time-first 2m;
        recheck-time 15m;
    }
}

hideserver {
	disable-map yes;
	disable-links yes;
	map-deny-message "$VOID";
	links-deny-message "$VOID";
}

security-group known-users {
	identified yes;
	reputation-score 10000;
}

#security-group tor {
#	ip 127.0.0.2;
#}

set known-users {
	auto-join "#superbowl";
}

set unknown-users {
	auto-join "#blackhole";
	static-quit "EMO-QUIT";
	static-part "EMO-PART";
}

#set tor {
#	auto-join "#tor";
#	static-quit "EMO-QUIT";
#	static-part "EMO-PART";
#}